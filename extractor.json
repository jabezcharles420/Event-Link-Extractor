{
  "name": "Event Data Extractor from Links",
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -1760,
        128
      ],
      "id": "da3af695-ab0e-491b-a5b6-58dbc662f5fb",
      "name": "When clicking ‘Execute workflow’"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "[REDACTED]",
          "mode": "id"
        },
        "sheetName": {
          "__rl": true,
          "value": "Sheet1",
          "mode": "name"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        -1536,
        128
      ],
      "id": "143de26b-66dc-4191-954e-0b21387b2fdc",
      "name": "Get row(s) in sheet",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "[REDACTED]",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ JSON.stringify($json) }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "You are a precise event information extraction agent.\n\nYou will receive a JSON object with partial or incomplete event details. Your job is to complete the missing or unknown fields by performing multiple Tavily web searches, using the existing fields to guide your search. For any missing or incomplete data, use the other fields in the JSON to perform the search.\n\nIf you cannot find the missing information after exhaustive search attempts, return \"Unknown\" for that field.\n\nYour output must be:\n\nStrictly valid JSON\n\nExactly matching the schema below\n\nIf you cannot match the following JSON, please keep it null.\n\nNo explanations, comments, markdown, or formatting outside JSON\n\nEach key must be present exactly as written.\n\nNever include nulls, only strings (use \"Unknown\" if missing).\n\nSchema:\n\n{\n\"Event Title\": \"\",\n\"Type of Gig\": \"\",\n\"Small Description\": \"\",\n\"Crowd Capacity Count\": \"\",\n\"Ticket Price\": \"\",\n\"Platform Name - Tickets available on\": \"\",\n\"Studio or Venue Name\": \"\",\n\"Does The Venue serve Food\": \"\",\n\"Does The Venue Serve Drinks\": \"\",\n\"Venue Contact no.\": \"\",\n\"Venue/Studio Rental to host a gig\": \"\",\n\"Venue/Studio Location\": \"\",\n\"Venue/Studio City\": \"\"\n}"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        -240,
        0
      ],
      "id": "2c707857-d580-4991-9f73-36311bc1cb42",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "query": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Query', ``, 'string') }}",
        "options": {}
      },
      "type": "@tavily/n8n-nodes-tavily.tavilyTool",
      "typeVersion": 1,
      "position": [
        -160,
        224
      ],
      "id": "659da792-6114-4c5a-82c6-f94449bd961e",
      "name": "Search in Tavily",
      "credentials": {
        "tavilyApi": {
          "id": "[REDACTED]",
          "name": "Tavily account"
        }
      }
    },
    {
      "parameters": {
        "url": "https://www.googleapis.com/customsearch/v1",
        "options": {},
        "queryParametersUi": {
          "parameter": [
            {
              "name": "key",
              "value": "[REDACTED]"
            },
            {
              "name": "cx",
              "value": "[REDACTED]"
            },
            {
              "name": "q",
              "value": "={{ $json[\"stillMissing\"].map(f => `${$json[\"EventTitle\"]} ${f}`).join(' ') }}"
            }
          ]
        }
      },
      "id": "172b6b52-02f6-4300-92a6-7fdc567daf53",
      "name": "Google Custom Search",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        -1760,
        352
      ]
    },
    {
      "parameters": {
        "functionCode": "// Get the inputs safely\nconst aiOutput = $json['preValidateAIOutput'] ?? {};\nconst googleOutput = $json['googleCustomSearch'] ?? {};\n\nconst finalOutput = {};\nconst keys = [\n  'Event Title','Type of Gig','Small Description','Crowd Capacity Count','Ticket Price',\n  'Platform Name - Tickets available on','Studio or Venue Name','Does The Venue serve Food',\n  'Does The Venue Serve Drinks','Venue Contact no.','Venue/Studio Rental to host a gig',\n  'Venue/Studio Location','Venue/Studio City'\n];\n\nkeys.forEach(key => {\n  if (aiOutput[key] && aiOutput[key] !== 'Unknown') {\n    finalOutput[key] = aiOutput[key];\n  } else if (googleOutput[key] && googleOutput[key] !== 'Unknown') {\n    finalOutput[key] = googleOutput[key];\n  } else {\n    finalOutput[key] = 'Unknown';\n  }\n});\n\nreturn { json: finalOutput };\n"
      },
      "id": "f458e1f8-fdb7-46a0-8ea5-86b5cbabaee7",
      "name": "Merge Results",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        -1536,
        352
      ]
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "[REDACTED]",
          "mode": "id"
        },
        "sheetName": {
          "__rl": true,
          "value": "Sheet1",
          "mode": "name"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Event Title": "={{ $json.output['Event Title'] }}",
            "Type of Gig Small Description ": "={{ $json.output['Type of Gig'] }}",
            "Crowd Capacity Count ": "={{ $json.output['Crowd Capacity Count'] }}",
            "Ticket Price": "={{ $json.output['Ticket Price'] }}",
            "Platform Name - Tickets available on ": "={{ $json.output['Platform Name - Tickets available on'] }}",
            "Studio or Venue Name ": "={{ $json.output['Studio or Venue Name'] }}",
            "Does The Venue Serve Drinks - Yes or No ": "={{ $json.output['Does The Venue Serve Drinks'] }}",
            "Does The Venue serve Food - Yes or No ": "={{ $json.output['Does The Venue serve Food'] }}",
            "Venue Contact no. ": "={{ $json.output['Venue Contact no.'] }}",
            "Venue/Studio Rental to host a gig  ": "={{ $json.output['Venue/Studio Rental to host a gig'] }}",
            "Venue/Studio City  ": "={{ $json.output['Venue/Studio City'] }}",
            "Venue/Studio Location ": "={{ $json.output['Venue/Studio Location'] }}",
            "S.No.": "={{ $json.output['Small Description'] }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "S.No.",
              "displayName": "S.No.",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Event Title",
              "displayName": "Event Title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Type of Gig Small Description ",
              "displayName": "Type of Gig Small Description ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Crowd Capacity Count ",
              "displayName": "Crowd Capacity Count ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Ticket Price",
              "displayName": "Ticket Price",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Platform Name - Tickets available on ",
              "displayName": "Platform Name - Tickets available on ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Studio or Venue Name ",
              "displayName": "Studio or Venue Name ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Does The Venue serve Food - Yes or No ",
              "displayName": "Does The Venue serve Food - Yes or No ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Does The Venue Serve Drinks - Yes or No ",
              "displayName": "Does The Venue Serve Drinks - Yes or No ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Venue Contact no. ",
              "displayName": "Venue Contact no. ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Venue/Studio Rental to host a gig  ",
              "displayName": "Venue/Studio Rental to host a gig  ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Venue/Studio Location ",
              "displayName": "Venue/Studio Location ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Venue/Studio City  ",
              "displayName": "Venue/Studio City  ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        176,
        128
      ],
      "id": "47244b95-cb0b-4fe5-b640-6a151b62176d",
      "name": "Append row in sheet",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "[REDACTED]",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-mini",
          "mode": "list",
          "cachedResultName": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -288,
        224
      ],
      "id": "04b2bf5e-3cc4-49c7-bee4-1a0ff9e24fae",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "[REDACTED]",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -1760,
        576
      ],
      "id": "a65c95c5-3411-4d96-bfa9-d7559ca4c1f0",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "[REDACTED]",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Here is the event data: {{ JSON.stringify($json.metadata, null, 2) }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=You are a precise event information extraction agent.\n\nYou will receive an HTML code snippet of an event webpage.\nYour job is to extract all relevant event details directly from the provided HTML first.\n\nif information is unavailable, return \"Unknown\" for that field.\n\nYour output must be:\n\nStrictly valid JSON\n\nExactly matching the schema below\n\nif you cannot match the following json, please keep it null\n\nNo explanations, comments, markdown, or formatting outside JSON\n\nEach key must be present exactly as written\n\nNever include nulls, only strings (use \"Unknown\" if missing)\n\nSchema:\n\n{\n  \"Event Title\": \"\",\n  \"Type of Gig\": \"\",\n  \"Small Description\": \"\",\n  \"Crowd Capacity Count\": \"\",\n  \"Ticket Price\": \"\",\n  \"Platform Name - Tickets available on\": \"\",\n  \"Studio or Venue Name\": \"\",\n  \"Does The Venue serve Food\": \"\",\n  \"Does The Venue Serve Drinks\": \"\",\n  \"Venue Contact no.\": \"\",\n  \"Venue/Studio Rental to host a gig\": \"\",\n  \"Venue/Studio Location\": \"\",\n  \"Venue/Studio City\": \"\"\n}\n\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        -640,
        0
      ],
      "id": "1ccce8a0-ee31-417a-bf49-2a8d5058ae97",
      "name": "AI Agent1",
      "retryOnFail": false,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n  \"Event Title\": \"\",\n  \"Type of Gig\": \"\",\n  \"Small Description\": \"\",\n  \"Crowd Capacity Count\": \"\",\n  \"Ticket Price\": \"\",\n  \"Platform Name - Tickets available on\": \"\",\n  \"Studio or Venue Name\": \"\",\n  \"Does The Venue serve Food\": \"\",\n  \"Does The Venue Serve Drinks\": \"\",\n  \"Venue Contact no.\": \"\",\n  \"Venue/Studio Rental to host a gig\": \"\",\n  \"Venue/Studio Location\": \"\",\n  \"Venue/Studio City\": \"\"\n}\n"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        -512,
        224
      ],
      "id": "19716fd0-9c61-4b6a-9ce7-571dd2eeafa2",
      "name": "Structured Output Parser1"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -640,
        224
      ],
      "id": "481b1bad-fe92-4c22-a55c-d0598d91c95f",
      "name": "OpenAI Chat Model2",
      "credentials": {
        "openAiApi": {
          "id": "[REDACTED]",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -1312,
        128
      ],
      "id": "4f8adcdd-1b3f-4ee4-bf41-a1eb6e7ef5f2",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "operation": "scrape",
        "url": "={{ $json['Events_event__288Rz href'] }}",
        "requestOptions": {}
      },
      "type": "@mendable/n8n-nodes-firecrawl.firecrawl",
      "typeVersion": 1,
      "position": [
        -1088,
        0
      ],
      "id": "e6f12b93-18bc-479a-b9ad-6f5a213c8bf3",
      "name": "Scrape a url and get its content1",
      "alwaysOutputData": false,
      "retryOnFail": false,
      "executeOnce": false,
      "credentials": {
        "firecrawlApi": {
          "id": "[REDACTED]",
          "name": "Firecrawl account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const md = $json.data?.metadata || {};\nreturn [{\n  metadata: {\n    description: md.description || \"No description available\",\n    twitterDescription: md[\"twitter:description\"] || \"No twitter description\",\n    image: md[\"twitter:image\"] || \"No image\",\n  }\n}];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -864,
        0
      ],
      "id": "ad05a259-1ad3-46d3-a20e-f829a8653867",
      "name": "Code in JavaScript"
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n\"Event Title\": \"\",\n\"Type of Gig\": \"\",\n\"Small Description\": \"\",\n\"Crowd Capacity Count\": \"\",\n\"Ticket Price\": \"\",\n\"Platform Name - Tickets available on\": \"\",\n\"Studio or Venue Name\": \"\",\n\"Does The Venue serve Food\": \"\",\n\"Does The Venue Serve Drinks\": \"\",\n\"Venue Contact no.\": \"\",\n\"Venue/Studio Rental to host a gig\": \"\",\n\"Venue/Studio Location\": \"\",\n\"Venue/Studio City\": \"\"\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        -32,
        224
      ],
      "id": "5d379f7c-b16c-4598-87a0-30597cc97cbe",
      "name": "Structured Output Parser2"
    }
  ],
  "pinData": {},
  "connections": {
    "When clicking ‘Execute workflow’": {
      "main": [
        [
          {
            "node": "Get row(s) in sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get row(s) in sheet": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Append row in sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Search in Tavily": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Google Custom Search": {
      "main": [
        [
          {
            "node": "Merge Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Append row in sheet": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index":0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        []
      ]
    },
    "AI Agent1": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser1": {
      "ai_outputParser": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "Scrape a url and get its content1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Scrape a url and get its content1": {
      "main": [
        [
          {
            "node": "Code in JavaScript",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code in JavaScript": {
      "main": [
        [
          {
            "node": "AI Agent1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser2": {
      "ai_outputParser": [
        [
          {
            "node": "AI Agent",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "a6361f4c-dffe-43c1-b333-d8dbb2603df8",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "[REDACTED]"
  },
  "id": "RA1801clRpXmgZ2w",
  "tags": []
}
